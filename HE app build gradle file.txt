apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
    /*maven {
        // Google's Maven repository
        url 'https://maven.google.com/'
        name 'Google'
    }*/
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion versions.compileSdk
    buildToolsVersion "${versions.buildTools}"
    compileOptions.encoding = 'windows-1251'

    defaultConfig {
        applicationId "com.heroeyez"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        //versionName "1.0"
        versionName "${versions.versionName}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // Enabling multiDex support.
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            lintOptions {
                disable 'MissingTranslation'
                disable 'ExtraTranslation'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        disable "ResourceType"
    }

    repositories {
        mavenCentral()
    }

    repositories {
        maven {
            url "https://jitpack.io"
        }
    }
    /*splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }*/
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Third party libraries
    compile 'com.soundcloud.android:android-crop:1.0.1@aar'
    compile "com.android.volley:volley:${versions.volley}"
    compile "com.googlecode.libphonenumber:libphonenumber:${versions.libPhoneNumber}"
    //noinspection GradleDynamicVersion
    compile 'com.github.siyamed:android-shape-imageview:0.9.+@aar'
    compile 'com.github.scottyab:showhidepasswordedittext:0.6'
    compile 'com.romainpiel.shimmer:library:1.4.0@aar'
    compile "org.jsoup:jsoup:${versions.jsoup}"
    compile 'commons-io:commons-io:2.4'
    // PubNub library
    compile "com.pubnub:pubnub:${versions.pubnub}"

    // Android native libraries
    //noinspection GradleCompatible
    compile "com.android.support:appcompat-v7:${versions.supportLibrary}"
    compile "com.android.support:design:${versions.supportLibrary}"
    compile "com.android.support:support-v4:${versions.supportLibrary}"
    compile "com.android.support:cardview-v7:${versions.supportLibrary}"
    compile "com.android.support:palette-v7:${versions.supportLibrary}"
    compile "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"
    compile "com.android.support:multidex:${versions.multiDex}"
    // Picasso
    compile "com.squareup.picasso:picasso:${versions.picasso}"

    // Firebase
    compile "com.google.firebase:firebase-messaging:${versions.firebase}"
    compile "com.google.firebase:firebase-ads:${versions.firebase}"
    // Google Play services
    compile "com.google.android.gms:play-services-maps:${versions.googlePlayServices}"
    compile "com.google.android.gms:play-services-gcm:${versions.googlePlayServices}"
    compile "com.google.android.gms:play-services-location:${versions.googlePlayServices}"

    // AppRTC files
    compile files('libs/autobanh.jar')
    // Twilio Programmable Video SDK
    compile "com.twilio:video-android:${versions.twilioVideoAndroidSdk}"
    // Flic (PbF - Powered by Flic)
    compile "com.google.code.gson:gson:${versions.gson}"
    compile 'joda-time:joda-time:2.9'
    compile files('libs/FlicLib-Release.jar')

    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    compile('org.apache.httpcomponents:httpmime:4.3') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile('org.apache.httpcomponents:httpcore:4.4.1') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile('com.github.ozodrukh:CircularReveal:2.0.1@aar') {
        transitive = true;
    }
}
apply plugin: 'com.google.gms.google-services'